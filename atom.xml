<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ian's Tech Note]]></title>
  <link href="http://iandai.github.io/atom.xml" rel="self"/>
  <link href="http://iandai.github.io/"/>
  <updated>2015-06-15T20:40:41+09:00</updated>
  <id>http://iandai.github.io/</id>
  <author>
    <name><![CDATA[Ian Dai]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[A/B Testing: Why, What, When, How by Mike Greenfield]]></title>
    <link href="http://iandai.github.io/blog/2015/06/15/a-slash-b-testing-why-what-when-how-by-mike-greenfield/"/>
    <updated>2015-06-15T20:22:05+09:00</updated>
    <id>http://iandai.github.io/blog/2015/06/15/a-slash-b-testing-why-what-when-how-by-mike-greenfield</id>
    <content type="html"><![CDATA[<p>Source:<br/>
<a href="http://www.slideshare.net/500startups/ab-testing-with-mike-greenfield">http://www.slideshare.net/500startups/ab-testing-with-mike-greenfield</a></p>

<p>Summary:<br/>
回答why, what, when, how和经验。<br/>
why因为有了数据才能衡量任何东西。<br/>
what 不要测试不能影响全局的细小因素。<br/>
when 只测试能够带来business significant的内容，经验是1万到10万人才值得做AB测试。<br/>
How 建自己的framework，这样才更佳自由。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A/B Testing: When to Do A/B Testing by Mike Greenfield.]]></title>
    <link href="http://iandai.github.io/blog/2015/06/15/when-to-do-a-slash-b-testing-a-primer-on-a-slash-b-testing-by-mike-greenfield/"/>
    <updated>2015-06-15T20:14:39+09:00</updated>
    <id>http://iandai.github.io/blog/2015/06/15/when-to-do-a-slash-b-testing-a-primer-on-a-slash-b-testing-by-mike-greenfield</id>
    <content type="html"><![CDATA[<p>Source:<br/>
<a href="http://numeratechoir.com/a-primer-on-ab-testing-yummy-candy/">http://numeratechoir.com/a-primer-on-ab-testing-yummy-candy/</a></p>

<p>Summary:<br/>
什么时候要做AB测试，非常靠谱的回答。<br/>
对于signup和邀请好友。如果受到邀请的好友signup，只有邀请人的0.8%，那么不应该做AB Testing。<br/>
对Email的Title和content做AB testing往往会有很好的效果。不过做之前，要想好会不会有大影响。如果email每天只有100个打开率，那么再优化，也不会有什么大影响。   <br/>
Purchase funnel也非常值得做AB测试。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> - Viral signup flows. If your current signup flow features 1000 signups inviting 3000 people, 900 of whom register for your product, you’re very close to being viral (K=0.9). A/B testing would be a good use of time. If your current flow features 1000 signups inviting 600 people, 80 of whom join (K=0.08), then you aren’t in the ballpark: optimizing button text is likely a waste of time. Go bigger.
</span><span class='line'> - Email content. Subject lines and link text can have a huge impact on email clickthrough rates. One typical example: an email with the subject “5 Embarrassing Kid Moments” gets 2.5 times as many clicks as one with the subject “The Craziest Thing My Child Has Done.” But again, being close to “good” is key: if that 2.5x is the difference between 50 clicks a week and 125 clicks a week, does it matter? If it doesn’t matter (and good estimation is key), no point spending time A/B testing it.
</span><span class='line'> - Purchase funnel. Much of Team Rankings‘ revenue comes from subscriptions, and some purchase funnels can be much more effective than others. Last year, for instance, our March Madness product, BracketBrains, generated 30% more sales when we prompted people to “Get 2011 Picks” than to “Get BracketBrains”. Same caveats apply here, though: test if and only if the differences are likely to matter for your business.</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Video: 10 Habits of High-Growth Startups by Sean Ellis]]></title>
    <link href="http://iandai.github.io/blog/2015/06/15/video-10-habits-of-high-growth-startups-by-sean-ellis/"/>
    <updated>2015-06-15T19:25:06+09:00</updated>
    <id>http://iandai.github.io/blog/2015/06/15/video-10-habits-of-high-growth-startups-by-sean-ellis</id>
    <content type="html"><![CDATA[<p>Source:<br/>
<a href="https://growthhackers.com/videos/10-habits-of-high-growth-startups-by-sean-ellis/">https://growthhackers.com/videos/10-habits-of-high-growth-startups-by-sean-ellis/</a></p>

<p>Summary:<br/>
Video: 10 Habits of High-Growth Startups by Sean Ellis<br/>
第一次提出Growth Hacker这个名字的人Sean Ellis的演讲：10个让创业公司快速成长的习惯<br/>
1 Putting the first thing first. 意思是做一个好的产品是一切的基础，A product that worth growth<br/>
2 Curious about Customers. 倾听你的customer，看他们是否觉得你提供的service有价值，是否一个must have的service<br/>
3 Instrument Powerful Analytics<br/>
4 Optimize Conversions<br/>
5 Treat Growth as Team Sport 各个team之间，透明很重要。客服和工程师提出的想法的角度往往不同<br/>
6 Experiment on Ideas 测试才能知道idea的效果，往往你觉得有用的没用，你觉得没用的反而有用<br/>
7 Prioritize Resources for Growth   <br/>
8 Execute at High Tempo 执行要快，并发执行实验<br/>
9 Accontability for inputs 要有足够的输出，就要有足够的输入<br/>
10 Double Down on Success  在已经有效果的channel上面，更加深入和精细，以求获得更好的效果</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linkedin Use Dark Pattern Design to Get New User]]></title>
    <link href="http://iandai.github.io/blog/2015/06/15/linkedin-use-dark-pattern-design-to-get-new-user/"/>
    <updated>2015-06-15T19:19:41+09:00</updated>
    <id>http://iandai.github.io/blog/2015/06/15/linkedin-use-dark-pattern-design-to-get-new-user</id>
    <content type="html"><![CDATA[<p>Source: <br/>
<a href="https://medium.com/@danrschlosser/linkedin-dark-patterns-3ae726fe1462">https://medium.com/@danrschlosser/linkedin-dark-patterns-3ae726fe1462</a></p>

<p>Summary:<br/>
Linkedin的黑暗设计模式：通过设计的方法，利用用户的误解或者疏忽，获取的用户的全部邮件好友列表。<br/>
获取注册用户的好友，对于Linkedin来说是非常重要的。Linkedin通过设计，让你不经意间授权了他获取好友email列表，然后让你不经意间邀请那些不在Linkedin上的好友。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Successful Mobile App Entrepreneurs]]></title>
    <link href="http://iandai.github.io/blog/2015/06/12/successful-mobile-app-entrepreneurs/"/>
    <updated>2015-06-12T19:13:36+09:00</updated>
    <id>http://iandai.github.io/blog/2015/06/12/successful-mobile-app-entrepreneurs</id>
    <content type="html"><![CDATA[<p>Source:  <br/>
<a href="http://thenextweb.com/entrepreneur/2015/06/02/9-daily-habits-of-successful-mobile-app-entrepreneurs/">http://thenextweb.com/entrepreneur/2015/06/02/9-daily-habits-of-successful-mobile-app-entrepreneurs/</a></p>

<p>Summary:
要做好mobile app entrepreneurs，应该做的9件事儿。
有启发的两件事儿是：<br/>
1.研究App Store，研究好的APP好在哪儿，不好的地方哪儿可以提高的，熟悉App Store的算法是如何工作的。
2.跟不好的APP学习。找出一些共同的patten，自己要避免。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Average Reteion for Google Play Apps by Andrew Chen]]></title>
    <link href="http://iandai.github.io/blog/2015/06/12/average-reteion-for-google-play-apps/"/>
    <updated>2015-06-12T15:41:08+09:00</updated>
    <id>http://iandai.github.io/blog/2015/06/12/average-reteion-for-google-play-apps</id>
    <content type="html"><![CDATA[<p>Source:<br/>
<a href="http://andrewchen.co/new-data-shows-why-losing-80-of-your-mobile-users-is-normal-and-that-the-best-apps-do-much-better/">http://andrewchen.co/new-data-shows-why-losing-80-of-your-mobile-users-is-normal-and-that-the-best-apps-do-much-better/</a></p>

<p>Summary:<br/>
Andrew Chen的文章：New data shows losing 80% of mobile users is normal, and why the best apps do better。<br/>
题目就是普通流失80%用户是正常的，而好的APP做的比这好的多。<br/>
作者分析了1亿多用户的Google Play apps的Average retention，发现平均起来，前三天会流失77%的用户，前90天会流失95%的用户。<br/>
另外根据作者和朋友的经验，持续使用超过一周的用户，往往持续使用比较久的时间。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Do I Always Have to Call [Super viewDidLoad] in the -viewDidLoad Method]]></title>
    <link href="http://iandai.github.io/blog/2015/06/09/call-super-viewdidload/"/>
    <updated>2015-06-09T12:08:39+09:00</updated>
    <id>http://iandai.github.io/blog/2015/06/09/call-super-viewdidload</id>
    <content type="html"><![CDATA[<ul>
<li>No, but it&rsquo;s good practise to call.</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>It's a good habit to get into, in case you change your inheritance structure and suddenly the class that used to inherit from UIViewController now inherits from something that does do something in the viewDidLoad method.</span></code></pre></td></tr></table></div></figure>


<h6>参考文献</h6>

<p><a href="http://stackoverflow.com/questions/824695/do-i-always-have-to-call-super-viewdidload-in-the-viewdidload-method">Do I always have to call [super viewDidLoad] in the -viewDidLoad method</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Hash Implementation]]></title>
    <link href="http://iandai.github.io/blog/2015/04/10/ruby-hash-implementation/"/>
    <updated>2015-04-10T12:08:39+09:00</updated>
    <id>http://iandai.github.io/blog/2015/04/10/ruby-hash-implementation</id>
    <content type="html"><![CDATA[<ul>
<li>murmur hash摘要算法，把key变为32或者128位的数字，再除以一个质数M，获得实践存储array的位置。</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>murmur_hash(key) % M</span></code></pre></td></tr></table></div></figure>


<ul>
<li>hash collision的处理方法

<ul>
<li>当碰撞的某一个位置有超过5个value的时候（密度超过5），就要调整质数M的大小，全部重新计算所有的hash数值（因为当单个位置不停增长的话，就又变回O(n)的复杂度了）。</li>
<li>质数的选取2的指数附近的数字</li>
</ul>
</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>private static final int MRI_PRIMES[] = {8 + 3, 16 + 3, 32 + 5, 64 + 3, 128 + 3, 256 + 27, ....};</span></code></pre></td></tr></table></div></figure>


<h6>参考文献</h6>

<p><a href="http://www.gotealeaf.com/blog/how-the-hash-works-in-ruby">How the hash works in ruby</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A/B Testing: Avoid Repeated Significance Testing Errors]]></title>
    <link href="http://iandai.github.io/blog/2015/03/25/avoid-repeated-significance-testing-errors/"/>
    <updated>2015-03-25T19:46:02+09:00</updated>
    <id>http://iandai.github.io/blog/2015/03/25/avoid-repeated-significance-testing-errors</id>
    <content type="html"><![CDATA[<p>Source:<br/>
<a href="http://www.evanmiller.org/how-not-to-run-an-ab-test.html">http://www.evanmiller.org/how-not-to-run-an-ab-test.html</a></p>

<p>Summary:<br/>
文章介绍了AB测试的常见统计错误：重复显著性测试错误（repeated significance testing errors）<br/>
值得注意的地方是：作者指出，在实验没有结束的时候，不停的去看结果是否显著，是不可取的。你很可能发现结果的显著性达到了1%或者5%而停止AB测试。
实际上这是人为的操纵了数据。显著性检验的前提条件是：你的样本大小sample size是固定的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A/B Testing: Use Third-party Solution or Build Own Solution?]]></title>
    <link href="http://iandai.github.io/blog/2015/03/24/a-slash-b-testing-use-third-party-solution-or-build-own-solution/"/>
    <updated>2015-03-24T19:59:01+09:00</updated>
    <id>http://iandai.github.io/blog/2015/03/24/a-slash-b-testing-use-third-party-solution-or-build-own-solution</id>
    <content type="html"><![CDATA[<p>Source:<br/>
<a href="http://lukethomas.com/ab-testing-solution-should-i-use-rails-app/">http://lukethomas.com/ab-testing-solution-should-i-use-rails-app/</a></p>

<p>Summary:<br/>
文中提到的有趣的一点是： sample size。AB测试要进行多久，收集到多数数据才能得出统计显著的结论呢？
具体的情况要具体分析。但是自己实现AB test的时候的优点在于，你不用担心多进行ab测试会花掉更多钱。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Facebook Growth VP Alex Schultz's Talk on Growth]]></title>
    <link href="http://iandai.github.io/blog/2015/02/15/facebook-growth-vp-talk-about-growth/"/>
    <updated>2015-02-15T12:08:39+09:00</updated>
    <id>http://iandai.github.io/blog/2015/02/15/facebook-growth-vp-talk-about-growth</id>
    <content type="html"><![CDATA[<div class="embed-video-container"><iframe src="//www.youtube.com/embed/n_yHZ_vKjno" allowfullscreen></iframe></div>


<p>Source:
How to Start a Startup: Growth
<a href="http://startupclass.samaltman.com/courses/lec06/">http://startupclass.samaltman.com/courses/lec06/</a></p>

<p>Summuary:<br/>
Facebook Growth Team VP Alex Schultz关于Growth的演讲。<br/>
Alex Schultz认为对于growth来说什么最重要：retention。<br/>
然后讲了什么才是好的retention。好的retention每个产品都不同。facebook有多于80%的retention，电商如果有20-30% active user retention就很不错。
具体情况需要具体分析，要自己去搞清楚适合自己产品的好的retention。
另外，growth需要一个north star。有很多数据，到底哪个最重要。Facebook的话就是14天内获得10个用户。
然后呢，产品需要一个magic moment。airbnb就是那些看起来很酷很想住的房子，facebook就是看到你的朋友也在facebook。
再之后，讲了一些具体策略。介绍个facebook，hotmail，paypal等公司实现增长的一些策略。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mysql Performance Tuning]]></title>
    <link href="http://iandai.github.io/blog/2015/02/06/mysql-performance-tuning/"/>
    <updated>2015-02-06T14:57:02+09:00</updated>
    <id>http://iandai.github.io/blog/2015/02/06/mysql-performance-tuning</id>
    <content type="html"><![CDATA[<h2>查看mysql运行状况</h2>

<ul>
<li>SHOW STATUS是查看MySQL运行情况</li>
<li>SHOW VARIABLES是查看MySQL的配置参数，可以使用类似SHOW VARIABLES LIKE &lsquo;Key%&rsquo;</li>
<li>SHOW PROCESSLIST是查看当前正在进行的进程</li>
</ul>


<h2>Mysql tunning</h2>

<h3>（1） Rule: 一次只修改一个参数！</h3>

<h3>（2）查看各种指标，寻找Bottle neck：</h3>

<ul>
<li>如果 Unix top显示服务的 CPU 占用率小于 70%，系统瓶颈可能在磁盘读写上。</li>
<li><code>iostat -d -x -k 1 10</code>查看设备使用率（%util）、响应时间（await）。Disk I/O 如果高的话，打开Innodb_buffer_pool_size可以提高速度，因为mysql可以把许多东西放在内存，而不用频繁的去读磁盘数据，进行DISK I/O.</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>SHOW GLOBAL VARIABLES LIKE 'innodb_buffer_pool_size’;
</span><span class='line'>
</span><span class='line'>决定innodb-buffer-pool-size方法：
</span><span class='line'>mysql&gt;     SELECT CEILING(Total_InnoDB_Bytes*1.6/POWER(1024,3)) RIBPS FROM
</span><span class='line'>(SELECT SUM(data_length+index_length) Total_InnoDB_Bytes
</span><span class='line'>FROM information_schema.tables WHERE engine='InnoDB') A;
</span><span class='line'>mysql&gt;     SELECT (PagesData*PageSize)/POWER(1024,3) DataGB FROM
</span><span class='line'>(SELECT variable_value PagesData
</span><span class='line'>FROM information_schema.global_status
</span><span class='line'>WHERE variable_name='Innodb_buffer_pool_pages_data') A,
</span><span class='line'>(SELECT variable_value PageSize
</span><span class='line'>FROM information_schema.global_status
</span><span class='line'>WHERE variable_name='Innodb_page_size') B;</span></code></pre></td></tr></table></div></figure>


<ul>
<li>innodb_flush_log_at_trx_commit  （这个很管用）</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>默认值1的意思是每一次事务提交或事务外的指令都需要把日志写入（flush）硬盘，这是很费时的。特别是使用电 池供电缓存（Battery backed up cache）时。设成2对于很多运用，特别是从MyISAM表转过来的是可以的，它的意思是不写入硬盘而是写入系统缓存。日志仍然会每秒flush到硬 盘，所以你一般不会丢失超过1-2秒的更新。设成0会更快一点，但安全方面比较差，即使MySQL挂了也可能会丢失事务的数据。而值2只会在整个操作系统 挂了时才可能丢数据。 </span></code></pre></td></tr></table></div></figure>


<h2>Query tuning</h2>

<h3>(1) Slow query log</h3>

<ul>
<li>打开slow_query_log和log_queries_not_using_indexes</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>long_query_time    ：  设定慢查询的阀值，超出次设定值的SQL即被记录到慢查询日志，缺省值为10s
</span><span class='line'>slow_query_log      ：  指定是否开启慢查询日志
</span><span class='line'>log_slow_queries    ：  指定是否开启慢查询日志(该参数要被slow_query_log取代，做兼容性保留)
</span><span class='line'>slow_query_log_file ：  指定慢日志文件存放位置，可以为空，系统会给一个缺省的文件host_name-slow.log
</span><span class='line'>min_examined_row_limit：查询检查返回少于该参数指定行的SQL不被记录到慢查询日志
</span><span class='line'>log_queries_not_using_indexes: 不使用索引的慢查询日志是否记录到索引
</span><span class='line'>
</span><span class='line'>show global  variables like '%slow%';
</span><span class='line'>set global log_slow_queries=1;
</span><span class='line'>set global long_query_time=1;</span></code></pre></td></tr></table></div></figure>


<ul>
<li>使用<code>mysqldumpslow -s c -t 10 /database/mysql/slow-log</code>来查看slow log</li>
</ul>


<h3>(2) Optimize query</h3>

<ul>
<li>Use Explain</li>
<li>Use Select_scan

<ul>
<li>show status like &lsquo;Select_scan&rsquo;;   Select_scan/总查询数量商应该是常数。该值持续增长，说明需要优化。</li>
</ul>
</li>
<li>Use Select_full_join

<ul>
<li>没有主键（key）联合（Join）的执行。</li>
</ul>
</li>
<li>Use MySQL Query Analyzer（or alternative）</li>
<li>Tips:

<ul>
<li>The IN clause in MySQL is very fast, much faster than a join.</li>
<li>Avoid % at the start of LIKE on an index</li>
<li>Use UNION ALL when appropriate; default is UNION DISTINCT!</li>
<li>Understand left/right joins and use only when needed</li>
<li>使用memlock可以避免MySQL内存进入swap</li>
</ul>
</li>
</ul>


<h3>(3) insert/update</h3>

<ul>
<li>Use batch insert</li>
<li>在向 InnoDB 导入数据时，确认MySQL没有打开 autocommit=1 。否则每个插入语句都要将 log 刷新到磁盘。在你的 SQL 导入文件的第一行加入<code>set autocommit=0;</code>,并在最后一行加入<code>commit</code>;</li>
</ul>


<h3>(4) index</h3>

<ul>
<li>For large strings that need to be indexed, i.e. URLs, consider using a separate column using the MySQL MD5 to create a hash key and
index on it instead.</li>
<li>使用多列索引，multiple column index （force index）</li>
<li>Use prefix indexes on large keys</li>
</ul>


<h2>Schemas</h2>

<ul>
<li>Do not automatically use 255 for VARCHAR</li>
<li>如果要存储变长的字符串或字段可能会包含大量的 NULLs，请使用 VARCHAR 型字段代替 CHAR 。一个 CHAR(n) 字段总是使用 n bytes 来存储数据，即使这个字符串很短或是一个 NULL 值。较小的表更加适合缓冲池同时能够减少磁盘 I/O 。</li>
<li>Use procedue analyse to get recommedataion

<ul>
<li>SELECT * FROM sprocket_engine_execute_log PROCEDURE ANALYSE();</li>
</ul>
</li>
<li>Consider use enum, set types</li>
</ul>


<h2>Reference</h2>

<ul>
<li><a href="http://dba.stackexchange.com/questions/27328/how-large-should-be-mysql-innodb-buffer-pool-size">调节innodb-buffer-pool-size</a></li>
<li><a href="https://www.digitalocean.com/community/tutorials/how-to-measure-mysql-query-performance-with-mysqlslap">mysqlslap</a></li>
<li><a href="http://downloads.mysql.com/presentations/MySQL_Perfornance__Tuning_Overview_jp.pdf">MySQL Performance &amp; Tuning</a></li>
<li><a href="http://man.chinaunix.net/database/mysql/inonodb_zh/9.htm">InnoDB性能调整技巧</a></li>
<li><a href="http://robbin.iteye.com/blog/461382">MySQL InnoDB性能调整实践</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails Source Code: Fragement Caching]]></title>
    <link href="http://iandai.github.io/blog/2015/02/01/rails-source-code-fragement-caching/"/>
    <updated>2015-02-01T02:07:59+09:00</updated>
    <id>http://iandai.github.io/blog/2015/02/01/rails-source-code-fragement-caching</id>
    <content type="html"><![CDATA[<p>A friend asked me a question about rails fragment caching: Why 2 simple lines would be able to cache the fragment? Where is code that actually talking to cache store(such as memcached) and doing the job?</p>

<p>Rails fragment caching code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="o">&lt;</span><span class="sx">% cache </span><span class="k">do</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;% end %&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Simple.<br/>
But where is <code>cache</code> from?</p>

<p>With a search of Rails api, We can find that it is a helper from ActionView::Helpers::CacheHelper.</p>

<p>Reading the api, we still have no clue about how does this <code>cache</code> helper method calls the memcached store.
So let&rsquo;s started to read source.</p>

<p>First, open file actionview/lib/action_view/helpers/cache_helper.rb. We can find following cache method.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">def</span> <span class="nf">cache</span><span class="p">(</span><span class="nb">name</span> <span class="o">=</span> <span class="p">{},</span> <span class="n">options</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">controller</span><span class="o">.</span><span class="n">perform_caching</span>
</span><span class='line'>      <span class="n">safe_concat</span><span class="p">(</span><span class="n">fragment_for</span><span class="p">(</span><span class="n">cache_fragment_name</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">options</span><span class="p">),</span> <span class="n">options</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">))</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="k">yield</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="kp">nil</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>We notice there is a <code>fragment_for</code> method, let&rsquo;s see where it leads us.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">fragment_for</span><span class="p">(</span><span class="nb">name</span> <span class="o">=</span> <span class="p">{},</span> <span class="n">options</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span> <span class="c1">#:nodoc:</span>
</span><span class='line'>  <span class="n">read_fragment_for</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span> <span class="o">||</span> <span class="n">write_fragment_for</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">options</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>What does <code>read_fragment_for</code> method do?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">fragment_for</span><span class="p">(</span><span class="nb">name</span> <span class="o">=</span> <span class="p">{},</span> <span class="n">options</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span> <span class="c1">#:nodoc:</span>
</span><span class='line'>  <span class="n">read_fragment_for</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span> <span class="o">||</span> <span class="n">write_fragment_for</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">options</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">read_fragment_for</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span> <span class="c1">#:nodoc:</span>
</span><span class='line'>  <span class="n">controller</span><span class="o">.</span><span class="n">read_fragment</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>So <code>read_fragment_for</code> method leads us to a <code>read_fragment</code> method belongs to an object called <code>controller</code>.<br/>
Where does this <code>controller</code> object comes from?<br/>
It is actually an attribute reader and writer backed by an internally-named instance variable.<br/>
It is define in actionview/lib/action_view/helpers/controller_helper.rb file.<br/>
And it is initiated in actionview/lib/action_view/base.rb file.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">module</span> <span class="nn">ActionView</span>
</span><span class='line'>    <span class="k">module</span> <span class="nn">Helpers</span>
</span><span class='line'>      <span class="k">module</span> <span class="nn">ControllerHelper</span>
</span><span class='line'>        <span class="n">attr_internal</span> <span class="ss">:controller</span><span class="p">,</span> <span class="ss">:request</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">def</span> <span class="nf">assign_controller</span><span class="p">(</span><span class="n">controller</span><span class="p">)</span>
</span><span class='line'>          <span class="k">if</span> <span class="vi">@_controller</span> <span class="o">=</span> <span class="n">controller</span>
</span><span class='line'>            <span class="vi">@_request</span> <span class="o">=</span> <span class="n">controller</span><span class="o">.</span><span class="n">request</span> <span class="k">if</span> <span class="n">controller</span><span class="o">.</span><span class="n">respond_to?</span><span class="p">(</span><span class="ss">:request</span><span class="p">)</span>
</span><span class='line'>            <span class="vi">@_config</span>  <span class="o">=</span> <span class="n">controller</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">inheritable_copy</span> <span class="k">if</span> <span class="n">controller</span><span class="o">.</span><span class="n">respond_to?</span><span class="p">(</span><span class="ss">:config</span><span class="p">)</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s come back to <code>read_fragment</code> method.
In actionpack/lib/action_controller/caching/fragments.rb file, we find this method.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">module</span> <span class="nn">ActionController</span>
</span><span class='line'>    <span class="k">module</span> <span class="nn">Caching</span>
</span><span class='line'>      <span class="k">module</span> <span class="nn">Fragments</span>
</span><span class='line'>        <span class="k">def</span> <span class="nf">read_fragment</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>          <span class="k">return</span> <span class="k">unless</span> <span class="n">cache_configured?</span>
</span><span class='line'>          <span class="n">key</span> <span class="o">=</span> <span class="n">fragment_cache_key</span><span class="p">(</span><span class="n">key</span><span class="p">)</span>
</span><span class='line'>          <span class="n">instrument_fragment_cache</span> <span class="ss">:read_fragment</span><span class="p">,</span> <span class="n">key</span> <span class="k">do</span>
</span><span class='line'>            <span class="n">result</span> <span class="o">=</span> <span class="n">cache_store</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span>
</span><span class='line'>            <span class="n">result</span><span class="o">.</span><span class="n">respond_to?</span><span class="p">(</span><span class="ss">:html_safe</span><span class="p">)</span> <span class="p">?</span> <span class="n">result</span><span class="o">.</span><span class="n">html_safe</span> <span class="p">:</span> <span class="n">result</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>We are closer, because we see this line.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="n">result</span> <span class="o">=</span> <span class="n">cache_store</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Where is <code>cache_store</code> defined? We can find following code in actionpack/lib/action_controller/caching.rb file.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">def</span> <span class="nf">cache_store</span>
</span><span class='line'>    <span class="n">config</span><span class="o">.</span><span class="n">cache_store</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  
</span><span class='line'>  <span class="k">def</span> <span class="nf">cache_store</span><span class="o">=</span><span class="p">(</span><span class="n">store</span><span class="p">)</span>
</span><span class='line'>    <span class="n">config</span><span class="o">.</span><span class="n">cache_store</span> <span class="o">=</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">Cache</span><span class="o">.</span><span class="n">lookup_store</span><span class="p">(</span><span class="n">store</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Finally, in activesupport/lib/active_support/cache.rb filem, we find <code>lookup_store</code> method.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">def</span> <span class="nf">lookup_store</span><span class="p">(</span><span class="o">*</span><span class="n">store_option</span><span class="p">)</span>
</span><span class='line'>    <span class="n">store</span><span class="p">,</span> <span class="o">*</span><span class="n">parameters</span> <span class="o">=</span> <span class="o">*</span><span class="nb">Array</span><span class="o">.</span><span class="n">wrap</span><span class="p">(</span><span class="n">store_option</span><span class="p">)</span><span class="o">.</span><span class="n">flatten</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">case</span> <span class="n">store</span>
</span><span class='line'>    <span class="k">when</span> <span class="no">Symbol</span>
</span><span class='line'>      <span class="n">retrieve_store_class</span><span class="p">(</span><span class="n">store</span><span class="p">)</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="o">*</span><span class="n">parameters</span><span class="p">)</span>
</span><span class='line'>    <span class="k">when</span> <span class="kp">nil</span>
</span><span class='line'>      <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">Cache</span><span class="o">::</span><span class="no">MemoryStore</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="n">store</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>An abstract cache store class alse defined in same file.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">class</span> <span class="nc">Store</span>
</span><span class='line'>      <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">read</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>      <span class="n">options</span> <span class="o">=</span> <span class="n">merged_options</span><span class="p">(</span><span class="n">options</span><span class="p">)</span>
</span><span class='line'>      <span class="n">key</span> <span class="o">=</span> <span class="n">namespaced_key</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span>
</span><span class='line'>      <span class="n">instrument</span><span class="p">(</span><span class="ss">:read</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">payload</span><span class="o">|</span>
</span><span class='line'>        <span class="n">entry</span> <span class="o">=</span> <span class="n">read_entry</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">entry</span>
</span><span class='line'>          <span class="k">if</span> <span class="n">entry</span><span class="o">.</span><span class="n">expired?</span>
</span><span class='line'>            <span class="n">delete_entry</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span>
</span><span class='line'>            <span class="n">payload</span><span class="o">[</span><span class="ss">:hit</span><span class="o">]</span> <span class="o">=</span> <span class="kp">false</span> <span class="k">if</span> <span class="n">payload</span>
</span><span class='line'>            <span class="kp">nil</span>
</span><span class='line'>          <span class="k">else</span>
</span><span class='line'>            <span class="n">payload</span><span class="o">[</span><span class="ss">:hit</span><span class="o">]</span> <span class="o">=</span> <span class="kp">true</span> <span class="k">if</span> <span class="n">payload</span>
</span><span class='line'>            <span class="n">entry</span><span class="o">.</span><span class="n">value</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>          <span class="n">payload</span><span class="o">[</span><span class="ss">:hit</span><span class="o">]</span> <span class="o">=</span> <span class="kp">false</span> <span class="k">if</span> <span class="n">payload</span>
</span><span class='line'>          <span class="kp">nil</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>      <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>In activesupport/lib/active_support/cache/mem_cache_store.rb file, <code>read_entry</code> is implemented.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">def</span> <span class="nf">read_entry</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span> <span class="c1"># :nodoc:</span>
</span><span class='line'>    <span class="n">deserialize_entry</span><span class="p">(</span><span class="vi">@data</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">escape_key</span><span class="p">(</span><span class="n">key</span><span class="p">),</span> <span class="n">options</span><span class="p">))</span>
</span><span class='line'>  <span class="k">rescue</span> <span class="no">Dalli</span><span class="o">::</span><span class="no">DalliError</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>    <span class="n">logger</span><span class="o">.</span><span class="n">error</span><span class="p">(</span><span class="s2">&quot;DalliError (</span><span class="si">#{</span><span class="n">e</span><span class="si">}</span><span class="s2">): </span><span class="si">#{</span><span class="n">e</span><span class="o">.</span><span class="n">message</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span> <span class="k">if</span> <span class="n">logger</span>
</span><span class='line'>    <span class="kp">nil</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>This is how fragment cache works in rails.</p>

<p>(完)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using iOS Google Maps SDK]]></title>
    <link href="http://iandai.github.io/blog/2015/01/22/using-ios-google-maps-sdk/"/>
    <updated>2015-01-22T20:10:37+09:00</updated>
    <id>http://iandai.github.io/blog/2015/01/22/using-ios-google-maps-sdk</id>
    <content type="html"><![CDATA[<h2>Steps</h2>

<ol>
<li> Apply Google Map Api Key</li>
<li> Import GoogleMaps.bundle in GoogleMaps.framework</li>
<li> In <code>Other Linker Flags</code> section, add <code>-ObjC</code></li>
<li> In <code>AppDelegate</code></li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &lt;GoogleMaps/GoogleMaps.h&gt;</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">application:</span><span class="p">(</span><span class="bp">UIApplication</span> <span class="o">*</span><span class="p">)</span><span class="nv">application</span> <span class="nf">didFinishLaunchingWithOptions:</span><span class="p">(</span><span class="bp">NSDictionary</span> <span class="o">*</span><span class="p">)</span><span class="nv">launchOptions</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">GMSServices</span> <span class="nl">provideAPIKey</span><span class="p">:</span><span class="s">@&quot;API_KEY&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">YES</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Possible issues</h2>

<p>1.In 2nd step, use GoogleMaps.bundle in GoogleMaps.framework, instead of use GoogleMaps.framework.</p>

<p>2.In 3rd step, use <code>-ObjC</code> will have conflict with other framework such as Parse&rsquo;s framework. The solution is to add following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>-force_load <span class="k">$(</span>PROJECT_DIR<span class="k">)</span>/GoogleMaps.framework/GoogleMaps
</span></code></pre></td></tr></table></div></figure>


<p>3.Use google maps in a subview.<br/>
Following Code will not work in a subview.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;YourViewController.h&quot;</span>
</span><span class='line'><span class="cp">#import &lt;GoogleMaps/GoogleMaps.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">YourViewController</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">GMSMapView</span> <span class="o">*</span><span class="n">mapView_</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Create a GMSCameraPosition that tells the map to display the</span>
</span><span class='line'>    <span class="c1">// coordinate -33.86,151.20 at zoom level 6.</span>
</span><span class='line'>    <span class="n">GMSCameraPosition</span> <span class="o">*</span><span class="n">camera</span> <span class="o">=</span> <span class="p">[</span><span class="n">GMSCameraPosition</span> <span class="nl">cameraWithLatitude</span><span class="p">:</span><span class="o">-</span><span class="mf">33.86</span>
</span><span class='line'>                                                      <span class="nl">longitude</span><span class="p">:</span><span class="mf">151.20</span>
</span><span class='line'>                                                           <span class="nl">zoom</span><span class="p">:</span><span class="mi">6</span><span class="p">];</span>
</span><span class='line'>    <span class="n">mapView_</span> <span class="o">=</span> <span class="p">[</span><span class="n">GMSMapView</span> <span class="nl">mapWithFrame</span><span class="p">:</span><span class="n">CGRectZero</span> <span class="nl">camera</span><span class="p">:</span><span class="n">camera</span><span class="p">];</span>
</span><span class='line'>    <span class="n">mapView_</span><span class="p">.</span><span class="n">myLocationEnabled</span> <span class="o">=</span> <span class="nb">YES</span><span class="p">;</span>
</span><span class='line'>    <span class="nb">self</span><span class="p">.</span><span class="n">view</span> <span class="o">=</span> <span class="n">mapView_</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Creates a marker in the center of the map.</span>
</span><span class='line'>    <span class="n">GMSMarker</span> <span class="o">*</span><span class="n">marker</span> <span class="o">=</span> <span class="p">[[</span><span class="n">GMSMarker</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>    <span class="n">marker</span><span class="p">.</span><span class="n">position</span> <span class="o">=</span> <span class="n">CLLocationCoordinate2DMake</span><span class="p">(</span><span class="o">-</span><span class="mf">33.86</span><span class="p">,</span> <span class="mf">151.20</span><span class="p">);</span>
</span><span class='line'>    <span class="n">marker</span><span class="p">.</span><span class="n">title</span> <span class="o">=</span> <span class="s">@&quot;Sydney&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">marker</span><span class="p">.</span><span class="n">snippet</span> <span class="o">=</span> <span class="s">@&quot;Australia&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">marker</span><span class="p">.</span><span class="n">map</span> <span class="o">=</span> <span class="n">mapView_</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Chnage the existing Xib&rsquo;s class into GSMMapView will solve the problem.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">weak</span><span class="p">,</span> <span class="k">nonatomic</span><span class="p">)</span> <span class="kt">IBOutlet</span> <span class="n">GMSMapView</span> <span class="o">*</span><span class="n">mapView</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="bp">CGPoint</span> <span class="n">center</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="mf">44.209769</span><span class="p">,</span> <span class="o">-</span><span class="mf">69.0648919</span><span class="p">);</span>
</span><span class='line'><span class="n">GMSCameraPosition</span> <span class="o">*</span><span class="n">camera</span> <span class="o">=</span> <span class="p">[</span><span class="n">GMSCameraPosition</span> <span class="nl">cameraWithLatitude</span><span class="p">:</span><span class="n">center</span><span class="p">.</span><span class="n">x</span>
</span><span class='line'>                                                        <span class="nl">longitude</span><span class="p">:</span><span class="n">center</span><span class="p">.</span><span class="n">y</span>
</span><span class='line'>                                                             <span class="nl">zoom</span><span class="p">:</span><span class="mf">15.5</span><span class="p">];</span>
</span><span class='line'><span class="nb">self</span><span class="p">.</span><span class="n">mapView</span><span class="p">.</span><span class="n">camera</span> <span class="o">=</span> <span class="n">camera</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">GMSMarker</span> <span class="o">*</span><span class="n">marker</span> <span class="o">=</span> <span class="p">[[</span><span class="n">GMSMarker</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="n">marker</span><span class="p">.</span><span class="n">position</span> <span class="o">=</span> <span class="n">CLLocationCoordinate2DMake</span><span class="p">(</span><span class="o">-</span><span class="mf">33.86</span><span class="p">,</span> <span class="mf">151.20</span><span class="p">);</span>
</span><span class='line'><span class="n">marker</span><span class="p">.</span><span class="n">title</span> <span class="o">=</span> <span class="s">@&quot;Sydney&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">marker</span><span class="p">.</span><span class="n">snippet</span> <span class="o">=</span> <span class="s">@&quot;Australia&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">marker</span><span class="p">.</span><span class="n">icon</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIImage</span> <span class="nl">imageNamed</span><span class="p">:</span><span class="s">@&quot;map_pin_icon&quot;</span><span class="p">];</span>
</span><span class='line'><span class="n">marker</span><span class="p">.</span><span class="n">map</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">mapView</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Reference</h2>

<ul>
<li><a href="http://stackoverflow.com/questions/15417811/cannot-put-a-google-maps-gmsmapview-in-a-subview-of-main-main-view">Add google maps in a subview</a></li>
<li><a href="http://dev.classmethod.jp/smartphone/iphone/ios-map-programming-series-1/">Customise GMSMarker</a></li>
<li><a href="http://stackoverflow.com/questions/16706587/can-i-link-googlemaps-sdk-for-ios-with-a-linker-flag-other-than-objc">Other Linker Flags Conflict</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cache Expiration]]></title>
    <link href="http://iandai.github.io/blog/2014/07/08/cache-expiration/"/>
    <updated>2014-07-08T18:46:10+09:00</updated>
    <id>http://iandai.github.io/blog/2014/07/08/cache-expiration</id>
    <content type="html"><![CDATA[<h2>Cache过期</h2>

<ul>
<li><p>Key Based Cache Expiration<br/>
  优点：
      降低耦合性和代码复杂度，只需要在自己的函数／方法中修改代码即可。
  缺点：
      适用于cache对应的记录有update_at字段。（Category整体没有update_at的时间记录，就没法使用该方法）
      每次查询，都需要首先查询update_at字段。</p></li>
<li><p>ORM模型回调接口删除cache（after_save, before_destroy, etc)<br/>
  优点：
      快。
  缺点：
      增加一定的代码复杂度。
      若不是ORM模型的代码，需要手动添加回调接口。</p></li>
<li><p>在代码中增加删除cache的代码<br/>
  优点：
      无。
  缺点：
      增加代码复杂度。      <br/>
      如果model层接口太多，大多数代码都是直接用sql语句存取，导致需要删除cache的函数太多，代码耦合度和复杂度都大大增加。</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL Injection]]></title>
    <link href="http://iandai.github.io/blog/2014/05/01/sql-injection/"/>
    <updated>2014-05-01T18:41:00+09:00</updated>
    <id>http://iandai.github.io/blog/2014/05/01/sql-injection</id>
    <content type="html"><![CDATA[<h2>SQL 注入方法</h2>

<ul>
<li><p>SQL 扫描工具<br/>
  sqlmap  <a href="https://github.com/sqlmapproject/sqlmap/wiki/Screenshots">https://github.com/sqlmapproject/sqlmap/wiki/Screenshots</a></p></li>
<li><p>SQL injection方法<br/>
1 ‘ or 1 = 1 —<br/>
2 select * from xxx where a = ‘123;  输入非法内容，看是否有sql error返回。</p></li>
<li><p>利用漏洞<br/>
ereg()有bug，无法检测到\0之后的内容，有可能将注入的内容隐藏在\0的后面。</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="nv">$a</span> <span class="o">=</span> <span class="s2">&quot;123</span><span class="se">\0\0</span><span class="s2">abc&quot;</span><span class="p">;</span>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot;source=[</span><span class="si">$a</span><span class="s2">]</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$r</span> <span class="o">=</span> <span class="nb">preg_match</span><span class="p">(</span><span class="s2">&quot;/123/&quot;</span><span class="p">,</span> <span class="nv">$a</span><span class="p">);</span>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot;match=[</span><span class="si">$r</span><span class="s2">]</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$r</span> <span class="o">=</span> <span class="nb">preg_match</span><span class="p">(</span><span class="s2">&quot;/abc/&quot;</span><span class="p">,</span> <span class="nv">$a</span><span class="p">);</span>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot;match=[</span><span class="si">$r</span><span class="s2">]</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$r</span> <span class="o">=</span> <span class="nb">ereg</span><span class="p">(</span><span class="s2">&quot;123&quot;</span><span class="p">,</span> <span class="nv">$a</span><span class="p">);</span>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot;match=[</span><span class="si">$r</span><span class="s2">]</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$r</span> <span class="o">=</span> <span class="nb">ereg</span><span class="p">(</span><span class="s2">&quot;abc&quot;</span><span class="p">,</span> <span class="nv">$a</span><span class="p">);</span>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot;match=[</span><span class="si">$r</span><span class="s2">]</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">/// ereg cannot detect &quot;abc&quot; after &quot;\0&quot;, so you must not use raw source string!</span>
</span><span class='line'><span class="c1">/// and you should not use ereg(). instead of it, use preg_match().</span>
</span></code></pre></td></tr></table></div></figure>


<h2>SQL注入的对策</h2>

<ul>
<li><p>输入<br/>
1 不要信任用户的输入，包括cookie。对用户的输入进行校验。如果是数字，就转化为数字，而不是字符类型的数字。<br/>
2 不要使用动态拼装sql，可以使用参数化的sql或者直接使用存储过程进行数据查询存取。</p></li>
<li><p>权限<br/>
1 不要使用有超级用户或其它有权创建新用户的数据库帐号来连接数据库，攻击者可以在数据库中新建一个超级用户。为每个应用使用单独的权限有限的数据库连接。<br/>
2 删除不再需要的存储过程，例如：master..Xp_cmdshell, xp_startmail, xp_sendmail, sp_makewebtask.</p></li>
<li><p>其他<br/>
1 不要把机密信息直接存放，加密或者hash掉密码和敏感的信息。<br/>
2 应用的异常信息应该给出尽可能少的提示，最好使用自定义的错误信息对原始错误信息进行包装。</p></li>
</ul>


<h3>参考链接</h3>

<p><a href="http://www.php.net/manual/zh/security.database.sql-injection.php">PHP官方手册对策</a><br/>
<a href="https://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet">OWASP的SQL注入防止CheatSheet</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CSS NOTES]]></title>
    <link href="http://iandai.github.io/blog/2014/04/08/css-notes/"/>
    <updated>2014-04-08T17:47:00+09:00</updated>
    <id>http://iandai.github.io/blog/2014/04/08/css-notes</id>
    <content type="html"><![CDATA[<h4>Tips</h4>

<p>zen coding快捷键<code>command+e</code><br/>
CSS布局技术都依赖于三个基本概念：定位，浮动和空白边(margin).<br/>
Link css: <code>&lt;link rel="stylesheet" href="…." /&gt;</code>, rel stands for relation.<br/>
inline box 不响应垂直margin, width, height, max/min width/height 等属性声明；block box 则可以响应这些属性。</p>

<h4>CSS使用原则</h4>

<p>前端的素养：注意各个元素之间的对齐方式。<br/>
html是用来标记这段内容是在做社么，而不是用来stlying的。<br/>
所以，table tag不用来表示styling画方框，而只是用来显示数据表格。</p>

<h4>font-family属性</h4>

<p>font-family: Verdana, Arial，sans-serif<br/>
浏览器会依次调用各个字体，直到系统装有该字体。 sans-serif为通用字体族，多数系统都装有该字体族中间的字体。<br/>
sans-serif代表无衬线体，与中文的黑体相对应.<br/>
Referance: <a href="http://zh.wikipedia.org/wiki/%E6%97%A0%E8%A1%AC%E7%BA%BF%E4%BD%93.">http://zh.wikipedia.org/wiki/%E6%97%A0%E8%A1%AC%E7%BA%BF%E4%BD%93.</a></p>

<h4>图片格式</h4>

<p>html使用的图片格式：普通图片使用jpeg，如果需要背景为透明，就必须使用png-24。</p>

<h4>normalize.css</h4>

<p>解决各种浏览器初始状态的不同和兼容问题<br/>
<a href="https://github.com/necolas/normalize.css">https://github.com/necolas/normalize.css</a></p>

<h4>HTML img标签的alt属性</h4>

<p>alt属性是一个必需的属性，它规定在图像无法显示时的替代文本.<br/>
alt stands for alternative text.</p>

<h4>使得竖着的list变成横向的navigation list方法</h4>

<p>添加display: inline;<br/>
Referance: <a href="https://tutsplus.com/lesson/navigation-lists/">https://tutsplus.com/lesson/navigation-lists/</a></p>

<h4>postion: relative和absolute定位 （相对定位和绝对定位）</h4>

<p>相对定位是“相对于”元素在文档流中的初始位置，而绝对定位是“相对于”最近的已定位祖先元素，如果不存在已定位的祖先元素，那么是最初的包含块。<br/>
相对定位在移动位置之后，不会影响其他文档流中元素的位置。<br/>
绝对定位在移动位置之后，元素从文档流中抽取出来，原占有的位置被后面的对象顶替上来。</p>

<p>position: absolute 会使得原来的inline元素变成block元素，从而能够使用width属性。</p>

<h4>居中</h4>

<p>水平居中(：margin和width同时使用的时候，才会有居中效果。<br/>
垂直居中(1)：vertical-align:middle;<br/>
line-height: 10px;   /<em> must define line-height to use vertical-align </em>/    <br/>
line-height: 100%;   等于font-size的高度，而不是div的高度<br/>
垂直居中(2)：padding:25px;  上下padding相等，则自动会垂直居中了</p>

<h4>奇怪的inline-block</h4>

<p>对li使用inline-block的时候，li之间存在space，即使把margin和padding都设置为0，依然无法消除。<br/>
问题的本质是两个li之间的space问题。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;li&gt;1&lt;/li&gt;
</span><span class='line'>&lt;li&gt;2&lt;/li&gt;</span></code></pre></td></tr></table></div></figure>


<p>space占有4px的空间，所以无法被消除。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;li&gt;1&lt;/li&gt;&lt;li&gt;2&lt;/li&gt;</span></code></pre></td></tr></table></div></figure>


<p>按照这种方式排列html，中间的space就会消失。<br/>
另一种方法是将 ul tag 的字体大小设置为0，然后把li tag中的font-size设置回来。<br/>
<a href="http://stackoverflow.com/questions/5256533/a-space-between-inline-block-list-items">Referance</a></p>

<h4>Margin的垂直collapse（Collapsing margins）</h4>

<p>Horizontal margins never collapse.<br/>
定义： the expression collapsing margins means that adjoining margins (no non-empty content, padding or border areas or clearance separate them) of two or more boxes (which may be next to one another or nested) combine to form a single margin.<br/>
两种情况：<br/>
1. 对于上下两个并列的div块而言，上面div的margin-bottom和下面div的margin-top会塌陷，也就是会取上下两者margin里最大值作为显示值。<br/>
2. 对于有块级子元素的元素计算高度的方式,如果元素没有垂直边框和填充,那其高度就是其子元素顶部和底部边框边缘之间的距离。<br/>
Referance<br/>
<a href="http://blog.csdn.net/dclchj/article/details/9787481">CSS的margin塌陷（collapse）</a><br/>
<a href="http://www.w3.org/TR/CSS2/box.html">Box model 8.3.1</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SSH Port Forward/Tunnel]]></title>
    <link href="http://iandai.github.io/blog/2014/03/18/port-forward-slash-tunnel/"/>
    <updated>2014-03-18T13:38:00+09:00</updated>
    <id>http://iandai.github.io/blog/2014/03/18/port-forward-slash-tunnel</id>
    <content type="html"><![CDATA[<h3>Agent Forwarding</h3>

<p>A - B - C 在从A访问C过程中经过B，但是不用在B上安装私钥，叫做Agent Forwarding</p>

<p>We have also seen another type of SSH forwarding, agent forwarding. [Section 6.3.5] This let us
create SSH connections from one computer, through a second computer, and onto a third using
public-key authentication, but without installing our private key on the second machine.</p>

<h3>Port Forwarding, also names as tunneliing</h3>

<p>A - B 之间使用例如TCP/IP这种不安全的协议的时候，在TCP/IP协议之中，增加一个安全的通道</p>

<p>Port forwarding is sometimes called tunneling because the SSH connection provides a secure &ldquo;tunnel&rdquo; through which another TCP/IP connection may pass.
SSH uses TCP/IP as its transport mechanism, usually TCP port 22 on the server machine, as it encrypts and decrypts the traffic passing over the connection.</p>

<h3>Local Port Forwarding and Remote Port Forwarding</h3>

<p>Local Port Forwarding—In most cases, local port forwarding is used to forward data securely from another
client application running on the same computer as the Secure Shell client. The Secure Shell client is
configured to redirect data from a specified local port (on the same computer as the Secure Shell client),
through the secure tunnel to a specified destination host and port. You can configure any other client
running on the same computer to connect to the forwarded port (rather than directly to the destination
host and port). After the Secure Shell connection is established, the Secure Shell client listens on the
specified port and redirects all data sent to that port through the secure tunnel to the Secure Shell
server. The server decrypts the data, and then directs it to the destination host and port.</p>

<p>Remote Port Forwarding—Remote port forwarding is used to forward data securely from any client
application running on the same computer as the Secure Shell server. In this case, the client session
requests that a specified remote port (on the same computer as the Secure Shell server) be used to
redirect the data. You can configure any other client running on the same computer as the Secure Shell
server to connect to the forwarded port (rather than directly to the destination host and port). After the
Secure Shell connection is established, the Secure Shell server listens on the specified port and redirects
all data sent to that port through the secure tunnel to the Secure Shell client. The client decrypts the
data and then directs it to the destination host and port.</p>

<h3>多阶段Port Forwarding/Tunnelling</h3>

<p><a href="http://superuser.com/questions/96489/ssh-tunnel-via-multiple-hops">http://superuser.com/questions/96489/ssh-tunnel-via-multiple-hops</a></p>

<h6>参考文献</h6>

<p><a href="http://www.amazon.com/SSH-The-Secure-Shell-Definitive/dp/0596008953">SSH, The Secure Shell - The Definitive Guide | Chapter Port Forwarding and X Forwarding</a></br></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rspec Test Principle - Test Only Your Own Code]]></title>
    <link href="http://iandai.github.io/blog/2014/02/27/rspec-test-principle-test-only-your-own-code/"/>
    <updated>2014-02-27T20:47:00+09:00</updated>
    <id>http://iandai.github.io/blog/2014/02/27/rspec-test-principle-test-only-your-own-code</id>
    <content type="html"><![CDATA[<p>测试的时候，这一点常常被忘记，那就是———只测试自己的代码。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">describe</span> <span class="no">S3Bucket</span> <span class="k">do</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">before</span><span class="p">(</span><span class="ss">:each</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">config_file</span> <span class="o">=</span> <span class="no">YAML</span><span class="o">.</span><span class="n">load_file</span><span class="p">(</span><span class="s1">&#39;.....&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@config</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>      <span class="s2">&quot;access_key_id&quot;</span> <span class="o">=&gt;</span> <span class="n">config_file</span><span class="o">[</span><span class="s2">&quot;s3&quot;</span><span class="o">][</span><span class="s2">&quot;access_key_id&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;secret_access_key&quot;</span> <span class="o">=&gt;</span> <span class="n">config_file</span><span class="o">[</span><span class="s2">&quot;s3&quot;</span><span class="o">][</span><span class="s2">&quot;secret_access_key&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;bucket_name&quot;</span> <span class="o">=&gt;</span> <span class="n">config_file</span><span class="o">[</span><span class="s2">&quot;s3&quot;</span><span class="o">][</span><span class="s2">&quot;bucket_name&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it</span> <span class="s2">&quot;initialize s3 bucket&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">s3b</span> <span class="o">=</span> <span class="no">S3Bucket</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="vi">@config</span><span class="p">)</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">s3b</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_an_instance_of</span><span class="p">(</span><span class="no">S3Bucket</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it</span> <span class="s2">&quot;initialize s3 bucket with wrong access_key_id&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="vi">@config</span><span class="o">[</span><span class="s2">&quot;access_key_id&quot;</span><span class="o">]</span> <span class="o">=</span> <span class="vi">@config</span><span class="o">[</span><span class="s2">&quot;access_key_id&quot;</span><span class="o">]</span> <span class="o">+</span> <span class="s2">&quot;1&quot;</span>
</span><span class='line'>    <span class="n">expect</span> <span class="p">{</span> <span class="no">S3Bucket</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="vi">@config</span><span class="p">)</span> <span class="p">}</span><span class="o">.</span><span class="n">to</span> <span class="n">raise_error</span><span class="p">(</span><span class="no">ArgumentError</span><span class="p">,</span> <span class="s2">&quot;AWS Access Key Id does not exist in our records.&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it</span> <span class="s2">&quot;upload file to s3&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">s3b</span> <span class="o">=</span> <span class="no">S3Bucket</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="vi">@config</span><span class="p">)</span>
</span><span class='line'>    <span class="n">public_url</span> <span class="o">=</span> <span class="n">s3b</span><span class="o">.</span><span class="n">upload</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">)</span><span class="si">}</span><span class="s2">/s3.yml&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">public_url</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_an_instance_of</span><span class="p">(</span><span class="no">URI</span><span class="o">::</span><span class="no">HTTPS</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面这段代码，测试上传文件到Amazon S3的代码。这段代码的问题是，它依赖于S3的服务是可行的，而且它其实更多的是在测试S3 SDK。
比如它测试了access key id出错的时候，会抛出ArgumentError。但是抛出ArgumentError的是S3的SDK，而不是S3Bucket类中的代码，所以这个测试其实是不必要的。</p>

<p>在测试这类测试的时候，可以使用rspec-mocks来进行测试。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">describe</span> <span class="no">S3Bucket</span> <span class="k">do</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">before</span><span class="p">(</span><span class="ss">:each</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>    <span class="vi">@file_path</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">)</span><span class="si">}</span><span class="s2">/../../../test.txt&quot;</span>
</span><span class='line'>    <span class="n">config_file</span> <span class="o">=</span> <span class="no">YAML</span><span class="o">.</span><span class="n">load_file</span><span class="p">(</span><span class="s1">&#39;.....&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@config</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>      <span class="s2">&quot;access_key_id&quot;</span> <span class="o">=&gt;</span> <span class="n">config_file</span><span class="o">[</span><span class="s2">&quot;s3&quot;</span><span class="o">][</span><span class="s2">&quot;access_key_id&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;secret_access_key&quot;</span> <span class="o">=&gt;</span> <span class="n">config_file</span><span class="o">[</span><span class="s2">&quot;s3&quot;</span><span class="o">][</span><span class="s2">&quot;secret_access_key&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;bucket_name&quot;</span> <span class="o">=&gt;</span> <span class="n">config_file</span><span class="o">[</span><span class="s2">&quot;s3&quot;</span><span class="o">][</span><span class="s2">&quot;bucket_name&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>      
</span><span class='line'>    <span class="c1"># AWS::S3 class should response to :new method</span>
</span><span class='line'>    <span class="n">s3</span> <span class="o">=</span> <span class="n">an_instance_of</span><span class="p">(</span><span class="no">AWS</span><span class="o">::</span><span class="no">S3</span><span class="p">)</span>
</span><span class='line'>    <span class="no">AWS</span><span class="o">::</span><span class="no">S3</span><span class="o">.</span><span class="n">stub</span><span class="p">(</span><span class="ss">:new</span><span class="p">)</span><span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="ss">:access_key_id</span> <span class="o">=&gt;</span> <span class="vi">@config</span><span class="o">[</span><span class="s2">&quot;access_key_id&quot;</span><span class="o">]</span><span class="p">,</span> <span class="ss">:secret_access_key</span> <span class="o">=&gt;</span> <span class="vi">@config</span><span class="o">[</span><span class="s2">&quot;secret_access_key&quot;</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">s3</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># build bucket object</span>
</span><span class='line'>    <span class="n">bucket</span> <span class="o">=</span> <span class="n">an_instance_of</span><span class="p">(</span><span class="no">AWS</span><span class="o">::</span><span class="no">S3</span><span class="o">::</span><span class="no">Bucket</span><span class="p">)</span>
</span><span class='line'>    <span class="n">s3</span><span class="o">.</span><span class="n">stub_chain</span><span class="p">(</span><span class="ss">:buckets</span><span class="p">,</span> <span class="ss">:[]</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">bucket</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># build s3 object with method upload and delete</span>
</span><span class='line'>    <span class="n">s3_obj</span> <span class="o">=</span> <span class="n">an_instance_of</span><span class="p">(</span><span class="no">AWS</span><span class="o">::</span><span class="no">S3</span><span class="o">::</span><span class="no">S3Object</span><span class="p">)</span>
</span><span class='line'>    <span class="n">bucket</span><span class="o">.</span><span class="n">stub_chain</span><span class="p">(</span><span class="ss">:objects</span><span class="p">,</span> <span class="ss">:[]</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="n">s3_obj</span><span class="p">)</span>
</span><span class='line'>    <span class="n">s3_obj</span><span class="o">.</span><span class="n">stub</span><span class="p">(</span><span class="ss">:write</span><span class="p">)</span><span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="ss">:file</span> <span class="o">=&gt;</span> <span class="vi">@file_path</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@test_url</span> <span class="o">=</span> <span class="no">URI</span><span class="o">::</span><span class="no">HTTPS</span><span class="o">.</span><span class="n">build</span><span class="p">({</span><span class="ss">:host</span> <span class="o">=&gt;</span> <span class="s1">&#39;www.example.com&#39;</span><span class="p">,</span> <span class="ss">:path</span> <span class="o">=&gt;</span> <span class="s1">&#39;/foo/bar&#39;</span><span class="p">})</span>
</span><span class='line'>    <span class="n">s3_obj</span><span class="o">.</span><span class="n">stub</span><span class="p">(</span><span class="ss">:public_url</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="vi">@test_url</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it</span> <span class="s2">&quot;initialize s3 bucket with &quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">s3b</span> <span class="o">=</span> <span class="no">S3Bucket</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="vi">@config</span><span class="p">)</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">s3b</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_an_instance_of</span><span class="p">(</span><span class="no">S3Bucket</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it</span> <span class="s2">&quot;upload file to s3&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">s3b</span> <span class="o">=</span> <span class="no">S3Bucket</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="vi">@config</span><span class="p">)</span>
</span><span class='line'>    <span class="n">public_url</span> <span class="o">=</span> <span class="n">s3b</span><span class="o">.</span><span class="n">upload</span><span class="p">(</span><span class="vi">@file_path</span><span class="p">)</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">public_url</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span><span class="p">(</span><span class="vi">@test_url</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面的代码，对访问S3的代码mock，从而不需要进行网络访问便测试了S3Bucket类中的代码。</p>

<h6>参考</h6>

<p><a href="https://github.com/rspec/rspec-expectations">Rspec Expectations</a></br>
<a href="http://betterspecs.org/">BetterSpec</a></br></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apache Server on MacOS Using .htaccess]]></title>
    <link href="http://iandai.github.io/blog/2013/12/04/apache-server-on-macos-using-htaccess/"/>
    <updated>2013-12-04T15:49:00+09:00</updated>
    <id>http://iandai.github.io/blog/2013/12/04/apache-server-on-macos-using-htaccess</id>
    <content type="html"><![CDATA[<h3>检测Apache是否支持mod_rewrite</h3>

<p>在httpd.conf文件中的Loaded Modules，是否包含了mod_rewrite模块；如果没有的话，去除这部分的注释。</p>

<h3>让apache服务器支持.htaccess</h3>

<p>在httpd.conf中的DocumentRoot的Directory中，AllowOverride修改为All。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;Directory "/Library/WebServer/Documents"&gt;
</span><span class='line'>    Options Indexes FollowSymLinks MultiViews
</span><span class='line'>    AllowOverride None
</span><span class='line'>    Order allow,deny
</span><span class='line'>    Allow from all
</span><span class='line'>&lt;/Directory&gt;</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;Directory "/Library/WebServer/Documents"&gt;
</span><span class='line'>    Options Indexes FollowSymLinks MultiViews
</span><span class='line'>    AllowOverride All
</span><span class='line'>    Order allow,deny
</span><span class='line'>    Allow from all
</span><span class='line'>&lt;/Directory&gt;</span></code></pre></td></tr></table></div></figure>


<h3>在/Library/WebServer/Documents中建立.htaccess 文件</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>RewriteEngine on
</span><span class='line'>RewriteRule ([a-zA-Z]{1,})-([0-9]{1,}).html$ index.php?action=$1&id=$2</span></code></pre></td></tr></table></div></figure>


<p>建立index.php文件</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="k">echo</span> <span class="nx">‘你的Action是：’</span> <span class="o">.</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;action&#39;</span><span class="p">];</span>
</span><span class='line'><span class="k">echo</span> <span class="nx">‘</span><span class="o">&lt;</span><span class="nx">br</span><span class="o">/&gt;</span><span class="nx">’</span><span class="p">;</span>
</span><span class='line'><span class="k">echo</span> <span class="nx">‘你的ID是：’</span> <span class="o">.</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;id&#39;</span><span class="p">];</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">在浏览器中输入：localhost</span><span class="o">/</span><span class="nx">view</span><span class="o">-</span><span class="mf">12.</span><span class="nx">html</span>
</span><span class='line'><span class="nx">输出的是：</span>
</span><span class='line'><span class="nx">你的Action是：view</span>
</span><span class='line'><span class="nx">你的ID是：12</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Referance</h3>

<p><a href="http://httpd.apache.org/docs/current/howto/htaccess.html">Apache htaccess doc</a></br>
<a href="http://blog.csdn.net/Yuhao818/article/details/4680075">Apache htaccess tutorial</a></br>
<a href="http://httpd.apache.org/docs/current/mod/mod_rewrite.html">Apache mod_rewirte doc</a></p>
]]></content>
  </entry>
  
</feed>
