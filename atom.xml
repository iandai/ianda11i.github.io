<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ian's Tech Note]]></title>
  <link href="http://iandai.github.io/atom.xml" rel="self"/>
  <link href="http://iandai.github.io/"/>
  <updated>2015-09-21T20:38:21+09:00</updated>
  <id>http://iandai.github.io/</id>
  <author>
    <name><![CDATA[Ian Dai]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Useful iOS Debug Tricks]]></title>
    <link href="http://iandai.github.io/blog/2015/09/20/useful-ios-debug-tricks/"/>
    <updated>2015-09-20T16:08:33+09:00</updated>
    <id>http://iandai.github.io/blog/2015/09/20/useful-ios-debug-tricks</id>
    <content type="html"><![CDATA[<h3>Crash Without Detailed Info</h3>

<h4>解决方法：</h4>

<ul>
<li>添加All Exception Breakpoint
在Breakpoint navigator，点+号，选择Add Exception Breakpoint，在Option选项选择默认的All。这样每次crash的时候仍然可以看到线程栈，调试起来就会方便很多，不用猜测到底哪里出了问题。</li>
<li>在lldb里面输入<code>po $arg1</code>
有时候crash的时候，线程栈是在UIApplicationMain，或者Main之类的地方，看不出来真正的crash的原因。这时候输入<code>po $arg1</code>有时候可以看到真正的crash原因。（不理解具体原理是什么, somehow it works）。</li>
</ul>


<h3>Debug after force quit app</h3>

<h4>解决方法：</h4>

<ul>
<li>Attach to Process
有时候需要Debug用户force quit一个App之后，在重新打开App之后的表现。可以在Debug的Attach to Process中,重新把App和Xcode连接起来，继续debug。</li>
</ul>


<h3>Debug View</h3>

<h4>解决方法：</h4>

<ul>
<li>在lldb中<code>po [[UIWindow keyWindow] recursiveDescription]</code></li>
<li>按cmd + 6进入Debug navigator，在该栏右上角的Process View option按钮中选择View UI Hierarchy。或者点击Debug View Hierarchy按钮。</li>
</ul>


<h3>Simulator shortcuts</h3>

<ul>
<li>回到Home：Command-Shift-H</li>
<li>关闭App： Command-Shift-H按两次</li>
<li>关闭网络： 关闭系统的网络</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Growth Tactics Example]]></title>
    <link href="http://iandai.github.io/blog/2015/08/12/growth-tatics/"/>
    <updated>2015-08-12T17:59:19+09:00</updated>
    <id>http://iandai.github.io/blog/2015/08/12/growth-tatics</id>
    <content type="html"><![CDATA[<ol>
<li>Jet.com用10万股票吸引人，帮助自己获得内测用户。带来最多的内测用户的人，可以获得10万股票，按照融资估值，约等于2000万美元。
第一Jet获得了注册用户，除了获得第一的人，其他人也在比赛中带来了注册用户
第二Jet付出的是股票，可以节约现金
第三Jet根据这个，做了一个事件营销，让自己变得有名
<a href="http://fusion.net/story/54990/guy-got-rich-using-jet/">http://fusion.net/story/54990/guy-got-rich-using-jet/</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Hamburger Menu Doesn't Work]]></title>
    <link href="http://iandai.github.io/blog/2015/08/11/the-hamburger-menu-doesnt-work/"/>
    <updated>2015-08-11T19:23:06+09:00</updated>
    <id>http://iandai.github.io/blog/2015/08/11/the-hamburger-menu-doesnt-work</id>
    <content type="html"><![CDATA[<p>Source:<br/>
<a href="http://deep.design/the-hamburger-menu/">http://deep.design/the-hamburger-menu/</a></p>

<p>Summary:</p>

<p>Facebook和New York Times也同样使用过Hambuerger Menu，但是结果显示不利于user engagement，后来都换回了tab。
作者所给出的理由，最重要的一点是，用户使用app和网页的方式，是看那些会令自己感兴趣的文字，然后到处试一试。而hanburger menu不显得有任何有趣的地方。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CLLocationManager Notes]]></title>
    <link href="http://iandai.github.io/blog/2015/07/09/cllocationmanager-notes/"/>
    <updated>2015-07-09T19:52:09+09:00</updated>
    <id>http://iandai.github.io/blog/2015/07/09/cllocationmanager-notes</id>
    <content type="html"><![CDATA[<ol>
<li><p>-(void)locationManager:(CLLocationManager <em>)manager didUpdateLocations:(NSArray </em>)locations
声名locationManager变量为局部变量会导致delegate不会被call，因为locationManager变量被释放了。</p></li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Create an instance of the CLLocationManager class and store a strong reference to it somewhere in your app.</span></code></pre></td></tr></table></div></figure>


<ol>
<li>提高location结果精度，并且在使用结束后停止updatelocation.
参考apple官方LocateMe sample：<a href="https://developer.apple.com/library/ios/samplecode/LocateMe/Introduction/Intro.html">https://developer.apple.com/library/ios/samplecode/LocateMe/Introduction/Intro.html</a></li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">locationManager:</span><span class="p">(</span><span class="bp">CLLocationManager</span> <span class="o">*</span><span class="p">)</span><span class="nv">manager</span> <span class="nf">didUpdateToLocation:</span><span class="p">(</span><span class="bp">CLLocation</span> <span class="o">*</span><span class="p">)</span><span class="nv">newLocation</span> <span class="nf">fromLocation:</span><span class="p">(</span><span class="bp">CLLocation</span> <span class="o">*</span><span class="p">)</span><span class="nv">oldLocation</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// test the age of the location measurement to determine if the measurement is cached</span>
</span><span class='line'>    <span class="c1">// in most cases you will not want to rely on cached measurements</span>
</span><span class='line'>    <span class="n">NSTimeInterval</span> <span class="n">locationAge</span> <span class="o">=</span> <span class="o">-</span><span class="p">[</span><span class="n">newLocation</span><span class="p">.</span><span class="n">timestamp</span> <span class="n">timeIntervalSinceNow</span><span class="p">];</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">locationAge</span> <span class="o">&gt;</span> <span class="mf">5.0</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// test that the horizontal accuracy does not indicate an invalid measurement</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">newLocation</span><span class="p">.</span><span class="n">horizontalAccuracy</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// test the measurement to see if it is more accurate than the previous measurement</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">self</span><span class="p">.</span><span class="n">bestEffortAtLocation</span> <span class="o">==</span> <span class="nb">nil</span> <span class="o">||</span> <span class="nb">self</span><span class="p">.</span><span class="n">bestEffortAtLocation</span><span class="p">.</span><span class="n">horizontalAccuracy</span> <span class="o">&gt;</span> <span class="n">newLocation</span><span class="p">.</span><span class="n">horizontalAccuracy</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">// store the location as the &quot;best effort&quot;</span>
</span><span class='line'>        <span class="nb">self</span><span class="p">.</span><span class="n">bestEffortAtLocation</span> <span class="o">=</span> <span class="n">newLocation</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// test the measurement to see if it meets the desired accuracy</span>
</span><span class='line'>        <span class="c1">//</span>
</span><span class='line'>        <span class="c1">// IMPORTANT!!! kCLLocationAccuracyBest should not be used for comparison with location coordinate or altitidue </span>
</span><span class='line'>        <span class="c1">// accuracy because it is a negative value. Instead, compare against some predetermined &quot;real&quot; measure of </span>
</span><span class='line'>        <span class="c1">// acceptable accuracy, or depend on the timeout to stop updating. This sample depends on the timeout.</span>
</span><span class='line'>        <span class="c1">//</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">newLocation</span><span class="p">.</span><span class="n">horizontalAccuracy</span> <span class="o">&lt;=</span> <span class="n">locationManager</span><span class="p">.</span><span class="n">desiredAccuracy</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">// we have a measurement that meets our requirements, so we can stop updating the location</span>
</span><span class='line'>            <span class="c1">// </span>
</span><span class='line'>            <span class="c1">// IMPORTANT!!! Minimize power usage by stopping the location manager as soon as possible.</span>
</span><span class='line'>            <span class="c1">//</span>
</span><span class='line'>            <span class="p">[</span><span class="nb">self</span> <span class="nl">stopUpdatingLocation</span><span class="p">:</span><span class="n">NSLocalizedString</span><span class="p">(</span><span class="s">@&quot;Acquired Location&quot;</span><span class="p">,</span> <span class="s">@&quot;Acquired Location&quot;</span><span class="p">)];</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>iPhone进入飞行模式并不会立刻停止接受GPS数据。
Location manager获取实时的location需要花费几秒钟，所以location manager会先返回cached location data，然后再返回更新过的数据，所以一定要check location对象的timestamp。
这也解释了，为何在执行<code>[self.locationManager stopUpdatingLocation];</code>之后，<code>- (void)locationManager:(CLLocationManager *)manager didFailWithError:(NSError *)error</code>还是会被call，应该是因为执行stopUpdatingLocation之后，实际上进行数据更新的线程还在运行，发现无法获取数据了，导致又被失败delegate被call了一次。</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">Regardless</span> <span class="n">of</span> <span class="n">which</span> <span class="n">location</span> <span class="n">service</span> <span class="n">you</span> <span class="n">use</span><span class="p">,</span> <span class="n">location</span> <span class="n">data</span> <span class="n">is</span> <span class="n">reported</span> <span class="n">to</span> <span class="n">your</span> <span class="n">app</span> <span class="n">via</span> <span class="n">the</span> <span class="n">location</span> <span class="n">manager</span><span class="err">’</span><span class="n">s</span> <span class="n">associated</span> <span class="n">delegate</span> <span class="n">object</span><span class="p">.</span> <span class="n">Because</span> <span class="n">it</span> <span class="n">can</span> <span class="n">take</span> <span class="n">several</span> <span class="n">seconds</span> <span class="n">to</span> <span class="k">return</span> <span class="n">an</span> <span class="n">initial</span> <span class="n">location</span><span class="p">,</span> <span class="n">the</span> <span class="n">location</span> <span class="n">manager</span> <span class="n">typically</span> <span class="n">delivers</span> <span class="n">the</span> <span class="n">previously</span> <span class="n">cached</span> <span class="n">location</span> <span class="n">data</span> <span class="n">immediately</span> <span class="n">and</span> <span class="n">then</span> <span class="n">delivers</span> <span class="n">more</span> <span class="n">up</span><span class="o">-</span><span class="n">to</span><span class="o">-</span><span class="n">date</span> <span class="n">location</span> <span class="n">data</span> <span class="n">as</span> <span class="n">it</span> <span class="n">becomes</span> <span class="n">available</span><span class="p">.</span> <span class="n">Therefore</span> <span class="n">it</span> <span class="n">is</span> <span class="n">always</span> <span class="n">a</span> <span class="n">good</span> <span class="n">idea</span> <span class="n">to</span> <span class="n">check</span> <span class="n">the</span> <span class="n">timestamp</span> <span class="n">of</span> <span class="n">any</span> <span class="n">location</span> <span class="n">object</span> <span class="n">before</span> <span class="n">taking</span> <span class="n">any</span> <span class="n">actions</span><span class="p">.</span> <span class="n">If</span> <span class="n">both</span> <span class="n">location</span> <span class="n">services</span> <span class="n">are</span> <span class="n">enabled</span> <span class="n">simultaneously</span><span class="p">,</span> <span class="n">they</span> <span class="n">deliver</span> <span class="n">events</span> <span class="n">using</span> <span class="n">the</span> <span class="n">same</span> <span class="n">set</span> <span class="n">of</span> <span class="n">delegate</span> <span class="n">methods</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Deferring updates省电</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">It</span> <span class="n">is</span> <span class="n">recommended</span> <span class="n">that</span> <span class="n">you</span> <span class="n">use</span> <span class="n">this</span> <span class="n">feature</span> <span class="k">in</span> <span class="n">situations</span> <span class="n">where</span> <span class="n">your</span> <span class="n">app</span> <span class="n">could</span> <span class="n">process</span> <span class="n">the</span> <span class="n">data</span> <span class="n">later</span> <span class="n">without</span> <span class="n">any</span> <span class="n">problems</span><span class="p">.</span>
</span><span class='line'><span class="n">An</span> <span class="n">app</span> <span class="n">that</span> <span class="n">tracks</span> <span class="n">the</span> <span class="n">user</span><span class="err">’</span><span class="n">s</span> <span class="n">location</span> <span class="n">on</span> <span class="n">a</span> <span class="n">hiking</span> <span class="n">trail</span> <span class="n">could</span> <span class="n">defer</span> <span class="n">updates</span> <span class="n">until</span> <span class="n">the</span> <span class="n">user</span> <span class="n">hikes</span> <span class="n">a</span> <span class="n">certain</span> <span class="n">distance</span> <span class="n">and</span> <span class="n">then</span> <span class="n">process</span> <span class="n">the</span> <span class="n">points</span> <span class="n">all</span> <span class="n">at</span> <span class="n">once</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Video: Growth Is Good but Retention Is 4ever at Wmd Conference by Brian Balfour]]></title>
    <link href="http://iandai.github.io/blog/2015/06/16/video-growth-is-good-but-retention-is-4ever-at-wmd-conference-by-brian-balfour/"/>
    <updated>2015-06-16T19:39:00+09:00</updated>
    <id>http://iandai.github.io/blog/2015/06/16/video-growth-is-good-but-retention-is-4ever-at-wmd-conference-by-brian-balfour</id>
    <content type="html"><![CDATA[<p>Source:<br/>
<a href="https://growthhackers.com/videos/video-growth-is-good-but-retention-is-4ever-at-wmd-conference-by-brian-balfour/">https://growthhackers.com/videos/video-growth-is-good-but-retention-is-4ever-at-wmd-conference-by-brian-balfour/</a></p>

<p>Summary:<br/>
Brain Balfour 讲为何retention为王。因为有了retention，其他的自然会来。<br/>
Increase retention -> Increase LTV -> Afford Higher CPA<br/>
Increase retention -> increase upgrade rates -> decrease payback period<br/>
其中有一个重要的点在于，有时候因为有许多新用户的增加和短期retention较高的水平，导致盲目投入，最后眼睁睁看着用户都流失掉。<br/>
所以retention最后要是一条水平线，而不能一直下垂。<br/>
讲了实际案例，如何预防retention下降的趋势，如何想办法提高retention。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A/B Testing: Why, What, When, How by Mike Greenfield]]></title>
    <link href="http://iandai.github.io/blog/2015/06/15/a-slash-b-testing-why-what-when-how-by-mike-greenfield/"/>
    <updated>2015-06-15T20:22:05+09:00</updated>
    <id>http://iandai.github.io/blog/2015/06/15/a-slash-b-testing-why-what-when-how-by-mike-greenfield</id>
    <content type="html"><![CDATA[<p>Source:<br/>
<a href="http://www.slideshare.net/500startups/ab-testing-with-mike-greenfield">http://www.slideshare.net/500startups/ab-testing-with-mike-greenfield</a></p>

<p>Summary:<br/>
回答why, what, when, how和经验。<br/>
why因为有了数据才能衡量任何东西。<br/>
what 不要测试不能影响全局的细小因素。<br/>
when 只测试能够带来business significant的内容，经验是1万到10万人才值得做AB测试。<br/>
How 建自己的framework，这样才更佳自由。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A/B Testing: When to Do A/B Testing by Mike Greenfield.]]></title>
    <link href="http://iandai.github.io/blog/2015/06/15/when-to-do-a-slash-b-testing-a-primer-on-a-slash-b-testing-by-mike-greenfield/"/>
    <updated>2015-06-15T20:14:39+09:00</updated>
    <id>http://iandai.github.io/blog/2015/06/15/when-to-do-a-slash-b-testing-a-primer-on-a-slash-b-testing-by-mike-greenfield</id>
    <content type="html"><![CDATA[<p>Source:<br/>
<a href="http://numeratechoir.com/a-primer-on-ab-testing-yummy-candy/">http://numeratechoir.com/a-primer-on-ab-testing-yummy-candy/</a></p>

<p>Summary:<br/>
什么时候要做AB测试，非常靠谱的回答。<br/>
对于signup和邀请好友。如果受到邀请的好友signup，只有邀请人的0.8%，那么不应该做AB Testing。<br/>
对Email的Title和content做AB testing往往会有很好的效果。不过做之前，要想好会不会有大影响。如果email每天只有100个打开率，那么再优化，也不会有什么大影响。   <br/>
Purchase funnel也非常值得做AB测试。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> - Viral signup flows. If your current signup flow features 1000 signups inviting 3000 people, 900 of whom register for your product, you’re very close to being viral (K=0.9). A/B testing would be a good use of time. If your current flow features 1000 signups inviting 600 people, 80 of whom join (K=0.08), then you aren’t in the ballpark: optimizing button text is likely a waste of time. Go bigger.
</span><span class='line'> - Email content. Subject lines and link text can have a huge impact on email clickthrough rates. One typical example: an email with the subject “5 Embarrassing Kid Moments” gets 2.5 times as many clicks as one with the subject “The Craziest Thing My Child Has Done.” But again, being close to “good” is key: if that 2.5x is the difference between 50 clicks a week and 125 clicks a week, does it matter? If it doesn’t matter (and good estimation is key), no point spending time A/B testing it.
</span><span class='line'> - Purchase funnel. Much of Team Rankings‘ revenue comes from subscriptions, and some purchase funnels can be much more effective than others. Last year, for instance, our March Madness product, BracketBrains, generated 30% more sales when we prompted people to “Get 2011 Picks” than to “Get BracketBrains”. Same caveats apply here, though: test if and only if the differences are likely to matter for your business.</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Video: 10 Habits of High-Growth Startups by Sean Ellis]]></title>
    <link href="http://iandai.github.io/blog/2015/06/15/video-10-habits-of-high-growth-startups-by-sean-ellis/"/>
    <updated>2015-06-15T19:25:06+09:00</updated>
    <id>http://iandai.github.io/blog/2015/06/15/video-10-habits-of-high-growth-startups-by-sean-ellis</id>
    <content type="html"><![CDATA[<p>Source:<br/>
<a href="https://growthhackers.com/videos/10-habits-of-high-growth-startups-by-sean-ellis/">https://growthhackers.com/videos/10-habits-of-high-growth-startups-by-sean-ellis/</a></p>

<p>Summary:<br/>
Video: 10 Habits of High-Growth Startups by Sean Ellis<br/>
第一次提出Growth Hacker这个名字的人Sean Ellis的演讲：10个让创业公司快速成长的习惯<br/>
1 Putting the first thing first. 意思是做一个好的产品是一切的基础，A product that worth growth<br/>
2 Curious about Customers. 倾听你的customer，看他们是否觉得你提供的service有价值，是否一个must have的service<br/>
3 Instrument Powerful Analytics<br/>
4 Optimize Conversions<br/>
5 Treat Growth as Team Sport 各个team之间，透明很重要。客服和工程师提出的想法的角度往往不同<br/>
6 Experiment on Ideas 测试才能知道idea的效果，往往你觉得有用的没用，你觉得没用的反而有用<br/>
7 Prioritize Resources for Growth   <br/>
8 Execute at High Tempo 执行要快，并发执行实验<br/>
9 Accontability for inputs 要有足够的输出，就要有足够的输入<br/>
10 Double Down on Success  在已经有效果的channel上面，更加深入和精细，以求获得更好的效果</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linkedin Use Dark Pattern Design to Get New User]]></title>
    <link href="http://iandai.github.io/blog/2015/06/15/linkedin-use-dark-pattern-design-to-get-new-user/"/>
    <updated>2015-06-15T19:19:41+09:00</updated>
    <id>http://iandai.github.io/blog/2015/06/15/linkedin-use-dark-pattern-design-to-get-new-user</id>
    <content type="html"><![CDATA[<p>Source: <br/>
<a href="https://medium.com/@danrschlosser/linkedin-dark-patterns-3ae726fe1462">https://medium.com/@danrschlosser/linkedin-dark-patterns-3ae726fe1462</a></p>

<p>Summary:<br/>
Linkedin的黑暗设计模式：通过设计的方法，利用用户的误解或者疏忽，获取的用户的全部邮件好友列表。<br/>
获取注册用户的好友，对于Linkedin来说是非常重要的。Linkedin通过设计，让你不经意间授权了他获取好友email列表，然后让你不经意间邀请那些不在Linkedin上的好友。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Successful Mobile App Entrepreneurs]]></title>
    <link href="http://iandai.github.io/blog/2015/06/12/successful-mobile-app-entrepreneurs/"/>
    <updated>2015-06-12T19:13:36+09:00</updated>
    <id>http://iandai.github.io/blog/2015/06/12/successful-mobile-app-entrepreneurs</id>
    <content type="html"><![CDATA[<p>Source:  <br/>
<a href="http://thenextweb.com/entrepreneur/2015/06/02/9-daily-habits-of-successful-mobile-app-entrepreneurs/">http://thenextweb.com/entrepreneur/2015/06/02/9-daily-habits-of-successful-mobile-app-entrepreneurs/</a></p>

<p>Summary:
要做好mobile app entrepreneurs，应该做的9件事儿。
有启发的两件事儿是：<br/>
1.研究App Store，研究好的APP好在哪儿，不好的地方哪儿可以提高的，熟悉App Store的算法是如何工作的。
2.跟不好的APP学习。找出一些共同的patten，自己要避免。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Average Reteion for Google Play Apps by Andrew Chen]]></title>
    <link href="http://iandai.github.io/blog/2015/06/12/average-reteion-for-google-play-apps/"/>
    <updated>2015-06-12T15:41:08+09:00</updated>
    <id>http://iandai.github.io/blog/2015/06/12/average-reteion-for-google-play-apps</id>
    <content type="html"><![CDATA[<p>Source:<br/>
<a href="http://andrewchen.co/new-data-shows-why-losing-80-of-your-mobile-users-is-normal-and-that-the-best-apps-do-much-better/">http://andrewchen.co/new-data-shows-why-losing-80-of-your-mobile-users-is-normal-and-that-the-best-apps-do-much-better/</a></p>

<p>Summary:<br/>
Andrew Chen的文章：New data shows losing 80% of mobile users is normal, and why the best apps do better。<br/>
题目就是普通流失80%用户是正常的，而好的APP做的比这好的多。<br/>
作者分析了1亿多用户的Google Play apps的Average retention，发现平均起来，前三天会流失77%的用户，前90天会流失95%的用户。<br/>
另外根据作者和朋友的经验，持续使用超过一周的用户，往往持续使用比较久的时间。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Do I Always Have to Call [Super viewDidLoad] in the -viewDidLoad Method]]></title>
    <link href="http://iandai.github.io/blog/2015/06/09/call-super-viewdidload/"/>
    <updated>2015-06-09T12:08:39+09:00</updated>
    <id>http://iandai.github.io/blog/2015/06/09/call-super-viewdidload</id>
    <content type="html"><![CDATA[<ul>
<li>No, but it&rsquo;s good practise to call.</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>It's a good habit to get into, in case you change your inheritance structure and suddenly the class that used to inherit from UIViewController now inherits from something that does do something in the viewDidLoad method.</span></code></pre></td></tr></table></div></figure>


<h6>参考文献</h6>

<p><a href="http://stackoverflow.com/questions/824695/do-i-always-have-to-call-super-viewdidload-in-the-viewdidload-method">Do I always have to call [super viewDidLoad] in the -viewDidLoad method</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Simplest and Most Important Dashboard for Early Stage Startups]]></title>
    <link href="http://iandai.github.io/blog/2015/06/03/the-simplest-and-most-important-dashboard-for-early-stage-startups/"/>
    <updated>2015-06-03T19:31:15+09:00</updated>
    <id>http://iandai.github.io/blog/2015/06/03/the-simplest-and-most-important-dashboard-for-early-stage-startups</id>
    <content type="html"><![CDATA[<p>Source:<br/>
<a href="http://klinger.io/post/77712761215/the-simplest-and-most-important-dashboard-for">http://klinger.io/post/77712761215/the-simplest-and-most-important-dashboard-for</a></p>

<p>Summary:<br/>
early stage start up最重要的metrics是什么？<br/>
1 retention<br/>
2 活用活跃信息，一个一个联系用户获得反馈，把它们留在7天内活跃的范围内。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Hash Implementation]]></title>
    <link href="http://iandai.github.io/blog/2015/04/10/ruby-hash-implementation/"/>
    <updated>2015-04-10T12:08:39+09:00</updated>
    <id>http://iandai.github.io/blog/2015/04/10/ruby-hash-implementation</id>
    <content type="html"><![CDATA[<ul>
<li>murmur hash摘要算法，把key变为32或者128位的数字，再除以一个质数M，获得实践存储array的位置。</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>murmur_hash(key) % M</span></code></pre></td></tr></table></div></figure>


<ul>
<li>hash collision的处理方法

<ul>
<li>当碰撞的某一个位置有超过5个value的时候（密度超过5），就要调整质数M的大小，全部重新计算所有的hash数值（因为当单个位置不停增长的话，就又变回O(n)的复杂度了）。</li>
<li>质数的选取2的指数附近的数字</li>
</ul>
</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>private static final int MRI_PRIMES[] = {8 + 3, 16 + 3, 32 + 5, 64 + 3, 128 + 3, 256 + 27, ....};</span></code></pre></td></tr></table></div></figure>


<h6>参考文献</h6>

<p><a href="http://www.gotealeaf.com/blog/how-the-hash-works-in-ruby">How the hash works in ruby</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A/B Testing: Avoid Repeated Significance Testing Errors]]></title>
    <link href="http://iandai.github.io/blog/2015/03/25/avoid-repeated-significance-testing-errors/"/>
    <updated>2015-03-25T19:46:02+09:00</updated>
    <id>http://iandai.github.io/blog/2015/03/25/avoid-repeated-significance-testing-errors</id>
    <content type="html"><![CDATA[<p>Source:<br/>
<a href="http://www.evanmiller.org/how-not-to-run-an-ab-test.html">http://www.evanmiller.org/how-not-to-run-an-ab-test.html</a></p>

<p>Summary:<br/>
文章介绍了AB测试的常见统计错误：重复显著性测试错误（repeated significance testing errors）<br/>
值得注意的地方是：作者指出，在实验没有结束的时候，不停的去看结果是否显著，是不可取的。你很可能发现结果的显著性达到了1%或者5%而停止AB测试。
实际上这是人为的操纵了数据。显著性检验的前提条件是：你的样本大小sample size是固定的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A/B Testing: Use Third-party Solution or Build Own Solution?]]></title>
    <link href="http://iandai.github.io/blog/2015/03/24/a-slash-b-testing-use-third-party-solution-or-build-own-solution/"/>
    <updated>2015-03-24T19:59:01+09:00</updated>
    <id>http://iandai.github.io/blog/2015/03/24/a-slash-b-testing-use-third-party-solution-or-build-own-solution</id>
    <content type="html"><![CDATA[<p>Source:<br/>
<a href="http://lukethomas.com/ab-testing-solution-should-i-use-rails-app/">http://lukethomas.com/ab-testing-solution-should-i-use-rails-app/</a></p>

<p>Summary:<br/>
文中提到的有趣的一点是： sample size。AB测试要进行多久，收集到多数数据才能得出统计显著的结论呢？
具体的情况要具体分析。但是自己实现AB test的时候的优点在于，你不用担心多进行ab测试会花掉更多钱。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Video: Growth for Early]]></title>
    <link href="http://iandai.github.io/blog/2015/03/19/video-growth-for-early/"/>
    <updated>2015-03-19T19:24:52+09:00</updated>
    <id>http://iandai.github.io/blog/2015/03/19/video-growth-for-early</id>
    <content type="html"><![CDATA[<p>Source:<br/>
<a href="https://www.youtube.com/watch?v=xY-CJNWsrso">https://www.youtube.com/watch?v=xY-CJNWsrso</a></p>

<p>Summary:<br/>
演讲者：Hiten Shah（KissMetrics），Nabeel Hyatt (Zynga, Spark Capital)，Joe Zadeh (AirBnB)</p>

<p>Point1: 在grow之前，找到ah-ha moment。grow之前先做awesome experience。</p>

<p>Point2: Does and Don&#8217;ts. Hiten KissMetrics: make data transaction. 不要覆盖更新数据，比如登陆数据。</p>

<p>Point3: How long focus on one channel? -> As soon as possible. 如果很久没结果，可能你的方法不太对。(Joe)</p>

<p>Point4: What is a good number?</p>

<blockquote><p>Nabeel: 某个数据，怎么样算是好了，怎么样算是没做好？  （和别人共享数据）<br/>
Hiten: 不要和别的公司做benchmark，设立自己的baseline。</p></blockquote>

<p>Point5:</p>

<blockquote><p>Nabeel:什么时候做push notification？  user打开他app的时候。<br/>
Hiten:对于B2B来说，sales==growth</p></blockquote>

<p>Point6:一个特别值得分享的经验</p>

<blockquote><p>Hiten： First user signup moment is important: kissmetrics让用户在最开始的时候，就看到有几个option。对提高用户选择option有非常大的帮助。<br/>
Joe：Dashboard。Put data as center, make data communicate with team.<br/>
Joe：Airbnb把客户服务的信件解析成可量化的细节，然后用于分析，了解客户。</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Long-term Impact of Badging by John Egan]]></title>
    <link href="http://iandai.github.io/blog/2015/03/13/long-term-impact-of-badging-by-john-egan/"/>
    <updated>2015-03-13T19:16:39+09:00</updated>
    <id>http://iandai.github.io/blog/2015/03/13/long-term-impact-of-badging-by-john-egan</id>
    <content type="html"><![CDATA[<p>Source:<br/>
<a href="http://jwegan.com/growth-hacking/long-term-impact-badging/">http://jwegan.com/growth-hacking/long-term-impact-badging/</a></p>

<p>Summary:<br/>
When it comes to growth, one potential pitfall is over optimizing for short-term wins. <br/>
根据Pinterest的经验，长期使用badge，对用户活跃度的影响。1个月的测试，DAU有7%的提高，长期的测试显示有2.5%的提高。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A/B Testing: Pitfalls With Google Analytics]]></title>
    <link href="http://iandai.github.io/blog/2015/02/24/a-slash-b-testing-pitfalls-with-google-analytics/"/>
    <updated>2015-02-24T19:14:01+09:00</updated>
    <id>http://iandai.github.io/blog/2015/02/24/a-slash-b-testing-pitfalls-with-google-analytics</id>
    <content type="html"><![CDATA[<p>Souce:<br/>
<a href="http://ggtheory.com/2010/04/19/abtestpitfal/">http://ggtheory.com/2010/04/19/abtestpitfal/</a></p>

<p>Summary:<br/>
Google Adwords的AB测试可能不是平均展示的。结果解读的时候要注意：数据量是否充分。
注意转化过程中的漏斗：结束AB测试之后，总点击率下降。可能原因是一部分用户喜欢A和B中被剔除的那个选项，导致总体点击率的减少。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Facebook Growth VP Alex Schultz's Talk on Growth]]></title>
    <link href="http://iandai.github.io/blog/2015/02/15/facebook-growth-vp-talk-about-growth/"/>
    <updated>2015-02-15T12:08:39+09:00</updated>
    <id>http://iandai.github.io/blog/2015/02/15/facebook-growth-vp-talk-about-growth</id>
    <content type="html"><![CDATA[<div class="embed-video-container"><iframe src="//www.youtube.com/embed/n_yHZ_vKjno" allowfullscreen></iframe></div>


<p>Source:
How to Start a Startup: Growth
<a href="http://startupclass.samaltman.com/courses/lec06/">http://startupclass.samaltman.com/courses/lec06/</a></p>

<p>Summuary:<br/>
Facebook Growth Team VP Alex Schultz关于Growth的演讲。<br/>
Alex Schultz认为对于growth来说什么最重要：retention。<br/>
然后讲了什么才是好的retention。好的retention每个产品都不同。facebook有多于80%的retention，电商如果有20-30% active user retention就很不错。
具体情况需要具体分析，要自己去搞清楚适合自己产品的好的retention。
另外，growth需要一个north star。有很多数据，到底哪个最重要。Facebook的话就是14天内获得10个用户。
然后呢，产品需要一个magic moment。airbnb就是那些看起来很酷很想住的房子，facebook就是看到你的朋友也在facebook。
再之后，讲了一些具体策略。介绍个facebook，hotmail，paypal等公司实现增长的一些策略。</p>
]]></content>
  </entry>
  
</feed>
